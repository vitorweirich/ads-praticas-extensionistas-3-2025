name: Build images on PR merge to master

on:
  push:
    branches: [master]

env:
  REGISTRY: registry.vitorweirich.com
  IMAGE_BACKEND: praticas-extensionistas-doacoes-backend
  IMAGE_FRONTEND: praticas-extensionistas-doacoes-frontend

jobs:
  build-and-notify:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.REGISTRY_USERNAME || github.actor }}
          password: ${{ secrets.REGISTRY_PASSWORD || secrets.TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v6
        with:
          context: sistema-doacoes-completo/backend
          file: sistema-doacoes-completo/backend/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_BACKEND }}:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v6
        with:
          context: sistema-doacoes-completo/frontend
          file: sistema-doacoes-completo/frontend/Dockerfile
          platforms: linux/amd64
          build-args: |
            MODE=production
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:latest
            ${{ env.REGISTRY }}/${{ env.IMAGE_FRONTEND }}:${{ github.sha }}

      - name: Deploy to Coolify
        env:
          COOLIFY_WEBHOOK: ${{ secrets.COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
        run: |
          if [ -z "$COOLIFY_WEBHOOK" ]; then
            echo "COOLIFY_WEBHOOK secret not set; skipping Coolify deployment.";
            exit 0;
          fi
          echo "Triggering Coolify deployment..."
          if [ -n "$COOLIFY_TOKEN" ]; then
            curl -fsS --request GET "$COOLIFY_WEBHOOK" --header "Authorization: Bearer $COOLIFY_TOKEN"
          else
            curl -fsS --request GET "$COOLIFY_WEBHOOK"
          fi
